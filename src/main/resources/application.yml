#sentry:
#  dsn: https://9fc07fdf536634533ad6956ca8f45d1e@o4505767793524736.ingest.sentry.io/4505767799095296
#  # Set traces-sample-rate to 1.0 to capture 100% of transactions for performance monitoring.
#  # We recommend adjusting this value in production.
#  traces-sample-rate: 1.0
server:
  port: 9002
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
grouphq:
  features:
    groups:
      create: false
      status: false
      join: true
      leave: true
  group-service:
    url: http://localhost:9001
    get-groups-timeout-milliseconds: 3000
    get-groups-retry-attempts: 3
    get-groups-retry-backoff-milliseconds: 100
    get-group-members-timeout-milliseconds: 3000
    get-group-members-retry-attempts: 3
    get-group-members-retry-backoff-milliseconds: 100

spring:
  application:
    name: group-sync
  lifecycle:
    timeout-per-shutdown-phase: 15s
#  config:
#    import: optional:configserver:${SPRING_CLOUD_CONFIG_URI:http://localhost:8888}
  cloud:
    config:
      enabled: false
      fail-fast: false
      request-connect-timeout: 5000
      request-read-timeout: 5000
      retry:
        multiplier: 1.5
        initial-interval: 10000
        max-interval: 50000
        max-attempts: 6
    function:
      definition: processedEvents
    stream:
      bindings:
        groupCreateRequests-out-0:
          destination: group-create-requests
          group: ${spring.application.name}
        groupStatusRequests-out-0:
          destination: group-status-requests
          group: ${spring.application.name}
        groupJoinRequests-out-0:
          destination: group-join-requests
          group: ${spring.application.name}
        groupLeaveRequests-out-0:
          destination: group-leave-requests
          group: ${spring.application.name}
        processedEvents-in-0:
          destination: group-event-results
          group: ${spring.application.name}
  rabbitmq:
    host: {$SPRING_RABBITMQ_HOST:localhost}
    port: 5672
    username: user
    password: password
    connection-timeout: 5s
  rsocket:
    server:
      mapping-path: /rsocket
      transport: websocket
logging:
  level:
    root: info
    org.grouphq: debug
  pattern:
    level: "%5p[${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health, heapdump, info, prometheus
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
info:
  system: GroupHQ